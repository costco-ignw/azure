# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

# pool:
#   vmImage: 'ubuntu-latest'

steps:
# - task: TerraformTaskV1@0
#   inputs:
#     provider: 'azurerm'
#     command: 'init'
    # backendServiceArm: 'Azure subscription 1(a5e1f313-dcc0-4487-b6b6-ca9a628c4e87)'
    # backendAzureRmResourceGroupName: 'terraform'
    # backendAzureRmStorageAccountName: 'ignw'
    # backendAzureRmContainerName: 'ignw'
    # backendAzureRmKey: 'terraform.tfstate'
    
- task: TerraformTaskV1@0
  inputs:
    provider: 'azurerm'
    command: 'validate'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(System.DefaultWorkingDirectory)'
    Contents: '**'
    TargetFolder: '$(Build.ArtifactStagingDirectory)'
    
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'costco-ignw.azure.$(Build.BuildId)'
    publishLocation: 'Container'


# - task: TerraformTaskV1@0
#   inputs:
#     provider: 'azurerm'
#     command: 'plan'
#     environmentServiceNameAzureRM: 'Azure subscription 1(a5e1f313-dcc0-4487-b6b6-ca9a628c4e87)'